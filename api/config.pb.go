// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Kind int32

const (
	Kind_UNKNOWN     Kind = 0
	Kind_HELM        Kind = 1
	Kind_CHARTMUSEUM Kind = 2
	Kind_HARBOR      Kind = 3
	Kind_OCI         Kind = 4
	Kind_LOCAL       Kind = 5
)

var Kind_name = map[int32]string{
	0: "UNKNOWN",
	1: "HELM",
	2: "CHARTMUSEUM",
	3: "HARBOR",
	4: "OCI",
	5: "LOCAL",
}

var Kind_value = map[string]int32{
	"UNKNOWN":     0,
	"HELM":        1,
	"CHARTMUSEUM": 2,
	"HARBOR":      3,
	"OCI":         4,
	"LOCAL":       5,
}

func (x Kind) String() string {
	return proto.EnumName(Kind_name, int32(x))
}

func (Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

// Config file structure
type Config struct {
	Source                  *Source  `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target                  *Target  `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Charts                  []string `protobuf:"bytes,3,rep,name=charts,proto3" json:"charts,omitempty"`
	RelocateContainerImages bool     `protobuf:"varint,4,opt,name=relocate_container_images,json=relocateContainerImages,proto3" json:"relocate_container_images,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Config) GetTarget() *Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Config) GetCharts() []string {
	if m != nil {
		return m.Charts
	}
	return nil
}

func (m *Config) GetRelocateContainerImages() bool {
	if m != nil {
		return m.RelocateContainerImages
	}
	return false
}

// SourceRepo contains the required information of the source chart repository
type Source struct {
	// Types that are valid to be assigned to Spec:
	//	*Source_Repo
	//	*Source_IntermediateBundlesPath
	Spec isSource_Spec `protobuf_oneof:"spec"`
	// Ignored if the repo is an intermediate bundle since the images are inside the bundle
	ContainerAuth        *ContainerAuth `protobuf:"bytes,3,opt,name=container_auth,json=containerAuth,proto3" json:"container_auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}

func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (m *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(m, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

type isSource_Spec interface {
	isSource_Spec()
}

type Source_Repo struct {
	Repo *Repo `protobuf:"bytes,1,opt,name=repo,proto3,oneof"`
}

type Source_IntermediateBundlesPath struct {
	IntermediateBundlesPath string `protobuf:"bytes,2,opt,name=intermediate_bundles_path,json=intermediateBundlesPath,proto3,oneof"`
}

func (*Source_Repo) isSource_Spec() {}

func (*Source_IntermediateBundlesPath) isSource_Spec() {}

func (m *Source) GetSpec() isSource_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Source) GetRepo() *Repo {
	if x, ok := m.GetSpec().(*Source_Repo); ok {
		return x.Repo
	}
	return nil
}

func (m *Source) GetIntermediateBundlesPath() string {
	if x, ok := m.GetSpec().(*Source_IntermediateBundlesPath); ok {
		return x.IntermediateBundlesPath
	}
	return ""
}

func (m *Source) GetContainerAuth() *ContainerAuth {
	if m != nil {
		return m.ContainerAuth
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Source) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Source_Repo)(nil),
		(*Source_IntermediateBundlesPath)(nil),
	}
}

// TargetRepo contains the required information of the target chart repository
type Target struct {
	// Types that are valid to be assigned to Spec:
	//	*Target_Repo
	//	*Target_IntermediateBundlesPath
	Spec                isTarget_Spec `protobuf_oneof:"spec"`
	ContainerRegistry   string        `protobuf:"bytes,2,opt,name=container_registry,json=containerRegistry,proto3" json:"container_registry,omitempty"`
	ContainerRepository string        `protobuf:"bytes,3,opt,name=container_repository,json=containerRepository,proto3" json:"container_repository,omitempty"`
	RepoName            string        `protobuf:"bytes,4,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`
	// Ignored if the repo is an intermediate bundle since the images are inside the bundle
	ContainerAuth        *ContainerAuth `protobuf:"bytes,6,opt,name=container_auth,json=containerAuth,proto3" json:"container_auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Target) Reset()         { *m = Target{} }
func (m *Target) String() string { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()    {}
func (*Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{2}
}

func (m *Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target.Unmarshal(m, b)
}
func (m *Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target.Marshal(b, m, deterministic)
}
func (m *Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target.Merge(m, src)
}
func (m *Target) XXX_Size() int {
	return xxx_messageInfo_Target.Size(m)
}
func (m *Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Target proto.InternalMessageInfo

type isTarget_Spec interface {
	isTarget_Spec()
}

type Target_Repo struct {
	Repo *Repo `protobuf:"bytes,1,opt,name=repo,proto3,oneof"`
}

type Target_IntermediateBundlesPath struct {
	IntermediateBundlesPath string `protobuf:"bytes,5,opt,name=intermediate_bundles_path,json=intermediateBundlesPath,proto3,oneof"`
}

func (*Target_Repo) isTarget_Spec() {}

func (*Target_IntermediateBundlesPath) isTarget_Spec() {}

func (m *Target) GetSpec() isTarget_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Target) GetRepo() *Repo {
	if x, ok := m.GetSpec().(*Target_Repo); ok {
		return x.Repo
	}
	return nil
}

func (m *Target) GetIntermediateBundlesPath() string {
	if x, ok := m.GetSpec().(*Target_IntermediateBundlesPath); ok {
		return x.IntermediateBundlesPath
	}
	return ""
}

func (m *Target) GetContainerRegistry() string {
	if m != nil {
		return m.ContainerRegistry
	}
	return ""
}

func (m *Target) GetContainerRepository() string {
	if m != nil {
		return m.ContainerRepository
	}
	return ""
}

func (m *Target) GetRepoName() string {
	if m != nil {
		return m.RepoName
	}
	return ""
}

func (m *Target) GetContainerAuth() *ContainerAuth {
	if m != nil {
		return m.ContainerAuth
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Target) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Target_Repo)(nil),
		(*Target_IntermediateBundlesPath)(nil),
	}
}

// Generic repo representation
type Repo struct {
	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Kind Kind   `protobuf:"varint,2,opt,name=kind,proto3,enum=api.Kind" json:"kind,omitempty"`
	Auth *Auth  `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	// The path where the repo stores charts. Useful for LOCAL kind only
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// The OCI reference where the index of charts is located
	// Example: my.oci.domain/index:latest
	ChartsIndex string `protobuf:"bytes,5,opt,name=chartsIndex,proto3" json:"chartsIndex,omitempty"`
	// Whether to use a charts index to find charts
	UseChartsIndex       bool     `protobuf:"varint,6,opt,name=useChartsIndex,proto3" json:"useChartsIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Repo) Reset()         { *m = Repo{} }
func (m *Repo) String() string { return proto.CompactTextString(m) }
func (*Repo) ProtoMessage()    {}
func (*Repo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{3}
}

func (m *Repo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repo.Unmarshal(m, b)
}
func (m *Repo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repo.Marshal(b, m, deterministic)
}
func (m *Repo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repo.Merge(m, src)
}
func (m *Repo) XXX_Size() int {
	return xxx_messageInfo_Repo.Size(m)
}
func (m *Repo) XXX_DiscardUnknown() {
	xxx_messageInfo_Repo.DiscardUnknown(m)
}

var xxx_messageInfo_Repo proto.InternalMessageInfo

func (m *Repo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Repo) GetKind() Kind {
	if m != nil {
		return m.Kind
	}
	return Kind_UNKNOWN
}

func (m *Repo) GetAuth() *Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *Repo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Repo) GetChartsIndex() string {
	if m != nil {
		return m.ChartsIndex
	}
	return ""
}

func (m *Repo) GetUseChartsIndex() bool {
	if m != nil {
		return m.UseChartsIndex
	}
	return false
}

// ContainerAuth defines the authentication parameters required to access the source/target
// OCI registries during container image relocation
type ContainerAuth struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Registry             string   `protobuf:"bytes,3,opt,name=registry,proto3" json:"registry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerAuth) Reset()         { *m = ContainerAuth{} }
func (m *ContainerAuth) String() string { return proto.CompactTextString(m) }
func (*ContainerAuth) ProtoMessage()    {}
func (*ContainerAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{4}
}

func (m *ContainerAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerAuth.Unmarshal(m, b)
}
func (m *ContainerAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerAuth.Marshal(b, m, deterministic)
}
func (m *ContainerAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerAuth.Merge(m, src)
}
func (m *ContainerAuth) XXX_Size() int {
	return xxx_messageInfo_ContainerAuth.Size(m)
}
func (m *ContainerAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerAuth.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerAuth proto.InternalMessageInfo

func (m *ContainerAuth) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ContainerAuth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ContainerAuth) GetRegistry() string {
	if m != nil {
		return m.Registry
	}
	return ""
}

// Auth contains credentials to login to a chart repository
type Auth struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{5}
}

func (m *Auth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auth.Unmarshal(m, b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
}
func (m *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(m, src)
}
func (m *Auth) XXX_Size() int {
	return xxx_messageInfo_Auth.Size(m)
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

func (m *Auth) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Auth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.Kind", Kind_name, Kind_value)
	proto.RegisterType((*Config)(nil), "api.Config")
	proto.RegisterType((*Source)(nil), "api.Source")
	proto.RegisterType((*Target)(nil), "api.Target")
	proto.RegisterType((*Repo)(nil), "api.Repo")
	proto.RegisterType((*ContainerAuth)(nil), "api.ContainerAuth")
	proto.RegisterType((*Auth)(nil), "api.Auth")
}

func init() {
	proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4)
}

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 570 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0xdd, 0x6c, 0xb2, 0xd9, 0xe6, 0xd6, 0x5d, 0xe3, 0x55, 0xdc, 0xae, 0x22, 0x96, 0x0a, 0xb2,
	0x08, 0x6d, 0x51, 0x9f, 0xfc, 0x40, 0x68, 0xc3, 0x42, 0x97, 0xdd, 0xb6, 0x32, 0xbb, 0x45, 0xf0,
	0xa5, 0x4c, 0x93, 0xb1, 0x19, 0x6c, 0x32, 0x61, 0x66, 0x82, 0xf6, 0x0f, 0x09, 0xfa, 0xec, 0x0f,
	0x94, 0x4c, 0xd2, 0x6e, 0x14, 0x41, 0x64, 0xdf, 0xe6, 0x9e, 0x73, 0x92, 0x7b, 0xee, 0xb9, 0xc3,
	0xc0, 0xad, 0x50, 0xa4, 0x9f, 0xf8, 0xb2, 0x97, 0x49, 0xa1, 0x05, 0xda, 0x34, 0xe3, 0x9d, 0x6f,
	0x16, 0xb8, 0x81, 0x41, 0xf1, 0x09, 0xb8, 0x4a, 0xe4, 0x32, 0x64, 0x2d, 0xab, 0x6d, 0x9d, 0x34,
	0x5f, 0x34, 0x7b, 0x34, 0xe3, 0xbd, 0x4b, 0x03, 0x91, 0x8a, 0x2a, 0x44, 0x9a, 0xca, 0x25, 0xd3,
	0xad, 0xdd, 0x9a, 0xe8, 0xca, 0x40, 0xa4, 0xa2, 0xf0, 0x3e, 0xb8, 0x61, 0x4c, 0xa5, 0x56, 0x2d,
	0xbb, 0x6d, 0x9f, 0x78, 0xa4, 0xaa, 0xf0, 0x35, 0x1c, 0x4b, 0xb6, 0x12, 0x21, 0xd5, 0x6c, 0x1e,
	0x8a, 0x54, 0x53, 0x9e, 0x32, 0x39, 0xe7, 0x09, 0x5d, 0x32, 0xd5, 0x72, 0xda, 0xd6, 0x49, 0x83,
	0x1c, 0x6d, 0x04, 0xc1, 0x86, 0x3f, 0x33, 0x74, 0xe7, 0x87, 0x05, 0x6e, 0xe9, 0x05, 0x1f, 0x83,
	0x23, 0x59, 0x26, 0x2a, 0x9b, 0x9e, 0x71, 0x40, 0x58, 0x26, 0x46, 0x3b, 0xc4, 0x10, 0xf8, 0x16,
	0x8e, 0x79, 0xaa, 0x99, 0x4c, 0x58, 0xc4, 0x8b, 0x5e, 0x8b, 0x3c, 0x8d, 0x56, 0x4c, 0xcd, 0x33,
	0xaa, 0x63, 0xe3, 0xdb, 0x1b, 0xed, 0x90, 0xa3, 0xba, 0x64, 0x58, 0x2a, 0xde, 0x53, 0x1d, 0xe3,
	0x2b, 0x38, 0xbc, 0x36, 0x47, 0x73, 0x1d, 0xb7, 0x6c, 0xd3, 0x08, 0x4d, 0xa3, 0xad, 0xaf, 0x41,
	0xae, 0x63, 0x72, 0x10, 0xd6, 0xcb, 0xa1, 0x0b, 0x8e, 0xca, 0x58, 0xd8, 0xf9, 0xbe, 0x0b, 0x6e,
	0x99, 0xc9, 0x0d, 0xcd, 0xee, 0xfd, 0xcb, 0x6c, 0x17, 0xf0, 0xda, 0xac, 0x64, 0x4b, 0xae, 0xb4,
	0x5c, 0x97, 0x33, 0x92, 0x3b, 0x5b, 0x86, 0x54, 0x04, 0x3e, 0x87, 0x7b, 0x75, 0x79, 0x26, 0x14,
	0xd7, 0x42, 0xae, 0xcd, 0x84, 0x1e, 0xb9, 0x5b, 0xfb, 0x60, 0x43, 0xe1, 0x43, 0xf0, 0x0a, 0xe1,
	0x3c, 0xa5, 0x09, 0x33, 0x4b, 0xf2, 0x48, 0xa3, 0x00, 0x26, 0x34, 0x61, 0x7f, 0xc9, 0xca, 0xfd,
	0xdf, 0xac, 0x7e, 0x5a, 0xe0, 0x14, 0xed, 0xd0, 0x07, 0x3b, 0x97, 0x2b, 0x13, 0x94, 0x47, 0x8a,
	0x23, 0x3e, 0x02, 0xe7, 0x33, 0x4f, 0x23, 0x33, 0xce, 0x61, 0x95, 0xdd, 0x39, 0x4f, 0x23, 0x62,
	0xe0, 0x82, 0xae, 0xad, 0xa7, 0xa4, 0x4d, 0x27, 0x03, 0x23, 0x82, 0x63, 0x32, 0x2c, 0x3d, 0x9b,
	0x33, 0xb6, 0xa1, 0x59, 0xde, 0xc5, 0xb3, 0x34, 0x62, 0x5f, 0xcb, 0x78, 0x49, 0x1d, 0xc2, 0xa7,
	0x70, 0x98, 0x2b, 0x16, 0xd4, 0x44, 0xae, 0xb9, 0x98, 0x7f, 0xa0, 0x9d, 0x10, 0x0e, 0x7e, 0x1b,
	0x0f, 0x1f, 0x40, 0x23, 0x57, 0x4c, 0x9a, 0x98, 0xca, 0x19, 0xb6, 0x75, 0xc1, 0x65, 0x54, 0xa9,
	0x2f, 0x42, 0x46, 0xd5, 0x6e, 0xb6, 0x75, 0xc1, 0x6d, 0xf7, 0x66, 0x6f, 0xe2, 0x2d, 0xeb, 0xce,
	0x3b, 0x70, 0x6e, 0xf2, 0xef, 0x67, 0x13, 0x70, 0x8a, 0xbc, 0xb0, 0x09, 0xfb, 0xb3, 0xc9, 0xf9,
	0x64, 0xfa, 0x61, 0xe2, 0xef, 0x60, 0x03, 0x9c, 0xd1, 0xe9, 0xc5, 0xd8, 0xb7, 0xf0, 0x36, 0x34,
	0x83, 0xd1, 0x80, 0x5c, 0x8d, 0x67, 0x97, 0xa7, 0xb3, 0xb1, 0xbf, 0x8b, 0x00, 0xee, 0x68, 0x40,
	0x86, 0x53, 0xe2, 0xdb, 0xb8, 0x0f, 0xf6, 0x34, 0x38, 0xf3, 0x1d, 0xf4, 0x60, 0xef, 0x62, 0x1a,
	0x0c, 0x2e, 0xfc, 0xbd, 0x61, 0xff, 0x63, 0x77, 0xc9, 0x75, 0x9c, 0x2f, 0x7a, 0xa1, 0x48, 0xfa,
	0x0b, 0xae, 0x53, 0x9a, 0xf0, 0xee, 0x8a, 0x2e, 0x54, 0xbf, 0xcc, 0xb0, 0xab, 0xd6, 0x69, 0xc8,
	0x64, 0x9f, 0x66, 0xfc, 0x0d, 0xcd, 0xf8, 0xc2, 0x35, 0x4f, 0xcd, 0xcb, 0x5f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xc5, 0xad, 0x9b, 0xdd, 0x7a, 0x04, 0x00, 0x00,
}
